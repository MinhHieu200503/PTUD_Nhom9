/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package smallPanel;

import java.awt.Color;
import java.awt.Component;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.RenderingHints;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

/**
 *
 * @author Minh Hieu
 */
public class Panel_Phong extends javax.swing.JPanel {


//
   

    /**
     * Creates new form ListPhong
     */
    public Panel_Phong(entity.Phong data,int choose) {
        initComponents();
        this.setBorder(new RoundedBorder(90));
        this.entityPhong = data;
        this.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clickPanel(evt,choose);
            }
        });
        setData(this.entityPhong);
        
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        int w = getWidth(), h = getHeight();
        GradientPaint gp = new GradientPaint(0, 0, Color.decode("#A1FFCE"), w, h, Color.decode("#FAFFD1"));
        g2d.setPaint(gp);
        g2d.fillRoundRect(0, 0, w, h,40,40);
    }
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lb_Icon = new javax.swing.JLabel();
        lb_TenPhong = new javax.swing.JLabel();
        lb_SucChua = new javax.swing.JLabel();
        lb_Gia = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 255, 153), new java.awt.Color(0, 51, 204), new java.awt.Color(0, 204, 0), new java.awt.Color(255, 102, 255)));
        setMaximumSize(new java.awt.Dimension(320, 150));
        setMinimumSize(new java.awt.Dimension(320, 150));
        setPreferredSize(new java.awt.Dimension(320, 150));
        setLayout(new java.awt.GridBagLayout());

        lb_Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_Status_Available.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 27, 0, 27);
        add(lb_Icon, gridBagConstraints);

        lb_TenPhong.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lb_TenPhong.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_TenPhong.setText("Phòng: 101 - Ha");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(lb_TenPhong, gridBagConstraints);

        lb_SucChua.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lb_SucChua.setText("Sức chứa: 20");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(36, 0, 36, 0);
        add(lb_SucChua, gridBagConstraints);

        lb_Gia.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        lb_Gia.setText("Giá : 150.000 VND ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        add(lb_Gia, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    private void clickPanel(java.awt.event.MouseEvent evt,int choose) {                            
        //                Phong tmpPhong = thisPhong;
//                JOptionPane.showConfirmDialog(null, "index: "+tmpPhong.getIndex()+"\nTen Phong: "+tmpPhong.getTenPhong()+
//                        "\nid Phong: "+ tmpPhong.getId()+"\nSuc Chua: "+tmpPhong.getSucChua()+"\nTrang thai: "+tmpPhong.getTrangThai()
//                        +"\nGia: "+tmpPhong.getGia()
//                );
                
            
            if(choose == 1){
                clickMulPanel();
            }
    }
    
    public  void clickMulPanel(){
        if(this.getBackground().equals(Color.WHITE)){
                this.setBackground(Color.red);
                Border border = new LineBorder(Color.ORANGE, 4, true);
                this.setBorder(border);
                flag = true;
            }
            else{
                
               this.setBackground(Color.white);
               this.setBorder(new RoundedBorder(90));
               flag = false;
            }
    }
    
    public void setData(entity.Phong data){
        lb_TenPhong.setText("Phòng: " + data.getTenPhong() + " - " + data.getMaPhong());
        lb_SucChua.setText("Sức chứa: " + String.valueOf(data.getSucChuaToiDa()));
        lb_Gia.setText("Giá: "+ String.valueOf(data.getGiaPhongTheoGio()));
    }
    
    public boolean getFlag(){
        return flag;
    }
    
    public  String getCode(){
        return lb_TenPhong.getText();
    }
     
    protected entity.Phong entityPhong;
    private boolean flag = false;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lb_Gia;
    private javax.swing.JLabel lb_Icon;
    private javax.swing.JLabel lb_SucChua;
    private javax.swing.JLabel lb_TenPhong;
    // End of variables declaration//GEN-END:variables
    



    //RoundBorder
    private static class RoundedBorder implements Border {
        
        private int radius;
        
        RoundedBorder(int radius) {
            this.radius = radius;
            
            
        }
        @Override
        public Insets getBorderInsets(Component c) {
            return new Insets(this.radius+1, this.radius+1, this.radius+2, this.radius);
        }

        @Override
        public boolean isBorderOpaque() {
            return true;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            g.drawRoundRect(x,y,width-1,height-1,radius,radius);
            
//            c.setForeground(Color.red);
            
        }
    }
}
