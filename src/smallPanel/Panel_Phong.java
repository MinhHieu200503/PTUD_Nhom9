/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package smallPanel;

import dao.DAO_LoaiPhong;
import dao.DAO_Phong;
import dao.I_CRUD;
import entity.LoaiPhong;
import java.awt.Color;
import java.awt.Component;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.RenderingHints;
import java.text.DecimalFormat;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

/**
 *
 * @author Minh Hieu
 */
public class Panel_Phong extends javax.swing.JPanel {


//
   

    /**
     * Creates new form ListPhong
     */
    public Panel_Phong(entity.Phong data) {
        initComponents();
        this.setBorder(new RoundedBorder(90));
        this.entityPhong = data;
        setData(this.entityPhong);
        
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        int w = getWidth(), h = getHeight();
        GradientPaint gp = new GradientPaint(0, 0, Color.decode("#A1FFCE"), w, h, Color.decode("#FAFFD1"));
        g2d.setPaint(gp);
        g2d.fillRoundRect(0, 0, w, h,40,40);
    }
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_Icon = new javax.swing.JLabel();
        lb_TenPhong = new javax.swing.JLabel();
        lb_SucChua = new javax.swing.JLabel();
        lb_Gia = new javax.swing.JLabel();
        logoVip = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(153, 255, 153), new java.awt.Color(0, 51, 204), new java.awt.Color(0, 204, 0), new java.awt.Color(255, 102, 255)));
        setMaximumSize(new java.awt.Dimension(262, 135));
        setMinimumSize(new java.awt.Dimension(262, 135));
        setPreferredSize(new java.awt.Dimension(262, 135));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_Status_Available.png"))); // NOI18N
        add(lb_Icon, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 49));

        lb_TenPhong.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lb_TenPhong.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_TenPhong.setText("Phòng: 101 - Ha");
        add(lb_TenPhong, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, -1, -1));

        lb_SucChua.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lb_SucChua.setText("Sức chứa: 20");
        add(lb_SucChua, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, -1, -1));

        lb_Gia.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        lb_Gia.setText("Giá : 150.000 VND ");
        add(lb_Gia, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, -1, -1));

        logoVip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/vip-Mini.gif"))); // NOI18N
        add(logoVip, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    
    private void clickPanel(java.awt.event.MouseEvent evt,int choose) {                            
        //                Phong tmpPhong = thisPhong;
//                JOptionPane.showConfirmDialog(null, "index: "+tmpPhong.getIndex()+"\nTen Phong: "+tmpPhong.getTenPhong()+
//                        "\nid Phong: "+ tmpPhong.getId()+"\nSuc Chua: "+tmpPhong.getSucChua()+"\nTrang thai: "+tmpPhong.getTrangThai()
//                        +"\nGia: "+tmpPhong.getGia()
//                );
                
            
            if(choose == 1){
                clickMulPanel();
            }
    }
    
    public  void clickMulPanel(){
        if(this.getBackground().equals(Color.WHITE)){
                this.setBackground(Color.red);
                Border border = new LineBorder(Color.ORANGE, 4, true);
                this.setBorder(border);
                flag = true;
            }
            else{
                
               this.setBackground(Color.white);
               this.setBorder(new RoundedBorder(90));
               flag = false;
            }
    }
    
    public void setData(entity.Phong data){
        DecimalFormat formatter = new DecimalFormat("###,###,###");
        dao.DAO_LoaiPhong daoLP = new DAO_LoaiPhong();
        DAO_Phong daoPhong = new DAO_Phong();
        lb_TenPhong.setText(data.getTenPhong() + " - " + data.getMaPhong());
        lb_SucChua.setText("Sức chứa: " + String.valueOf(data.getLoaiPhong().getSucChua()));
        lb_Gia.setText("Giá: " + formatter.format(data.getLoaiPhong().getGia()) + " VNĐ");

        this.setId(data.getMaPhong());
        this.setTenPhong(data.getTenPhong());
        this.setSucChua(data.getLoaiPhong().getSucChua());
        this.setGia(data.getLoaiPhong().getGia());
        this.setTrangThai(data.getTrangThai());
        String loaiPhong = getMaLoaiPhong(data);

        if(loaiPhong.equalsIgnoreCase("thường")){
            this.logoVip.setIcon(null);
        }
        if(this.trangThai==2){
            lb_Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_Status_Unvailable123.png")));
        }
        else if(this.trangThai == 1){
            lb_Icon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icon_Status_Wating.png")));
        }
    }
    
    public String getMaLoaiPhong(entity.Phong data){
        entity.LoaiPhong loaiPhong =  data.getLoaiPhong();
        return loaiPhong.getTenLoaiPhong();
    }
    
        public smallPanel.Panel_Phong   getPhong(){
            return this;
        }
    
        public String getId() {
			return id;
		}
		public void setId(String id) {
			this.id = id;
		}
		public int getIndex() {
			return index;
		}
		public void setIndex(int index) {
			this.index = index;
		}
		public String getTenPhong() {
			return tenPhong;
		}
		public void setTenPhong(String tenPhong) {
			this.tenPhong = tenPhong;
		}
		public int getSucChua() {
			return sucChua;
		}
		public void setSucChua(int sucChua) {
			this.sucChua = sucChua;
		}
		public Double getGia() {
			return gia;
		}
		public void setGia(Double gia) {
			this.gia = gia;
		}
		public int getTrangThai() {
			return trangThai;
		}
		public void setTrangThai(int trangThai) {
			this.trangThai = trangThai;
		}
		
		public javax.swing.JLabel getLb_Gia() {
			return lb_Gia;
		}
		public void setLb_Gia(javax.swing.JLabel lb_Gia) {
			this.lb_Gia = lb_Gia;
		}
		public javax.swing.JLabel getLb_Icon() {
			return lb_Icon;
		}
		public void setLb_Icon(javax.swing.JLabel lb_Icon) {
			this.lb_Icon = lb_Icon;
		}
		public javax.swing.JLabel getLb_SucChua() {
			return lb_SucChua;
		}
		public void setLb_SucChua(javax.swing.JLabel lb_SucChua) {
			this.lb_SucChua = lb_SucChua;
		}
		public javax.swing.JLabel getLb_TenPhong() {
			return lb_TenPhong;
		}
		public void setLb_TenPhong(javax.swing.JLabel lb_TenPhong) {
			this.lb_TenPhong = lb_TenPhong;
		}
                
                public boolean getFlag() {
			return flag;
		}
		public void setFlag(boolean flag) {
			this.flag = flag;
		}
    
    
    public void addData(int index,String id,String tenPhong,int sucChua,Double gia,int trangThai){
        //set giá trị getter/setter cho các thành phần trong object Phong
        this.index = index;
        this.id = id;
        this.tenPhong = tenPhong;
        this.sucChua = sucChua;
        this.trangThai = trangThai;
        this.gia = gia;
        
        // set giá trị cho các label hiển thị
        this.lb_TenPhong.setText(tenPhong);
        this.lb_SucChua.setText("Sức chứa: "+ sucChua+" người");
        this.lb_Gia.setText("Giá: "+gia+ " VND ");
        
        this.lb_SucChua.setName("SucChua");
        this.lb_TenPhong.setName("PhongCode");
        
        if(this.isVip == false){
            this.logoVip.setIcon(null);
        }
        
    }
    

    public  String getCode(){
        return lb_TenPhong.getText();
    }
     

    protected smallPanel.Panel_Phong thisPhong; 
    private String id;
    private int index;
    private boolean isVip;
    private String tenPhong;
    private int sucChua;
    private Double gia;
    private int trangThai;
    private boolean flag = false; 

    protected entity.Phong entityPhong;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lb_Gia;
    private javax.swing.JLabel lb_Icon;
    private javax.swing.JLabel lb_SucChua;
    private javax.swing.JLabel lb_TenPhong;
    private javax.swing.JLabel logoVip;
    // End of variables declaration//GEN-END:variables
    



    //RoundBorder
    public static class RoundedBorder implements Border {
        
        private int radius;
        
        RoundedBorder(int radius) {
            this.radius = radius;
            
            
        }
        @Override
        public Insets getBorderInsets(Component c) {
            return new Insets(this.radius+1, this.radius+1, this.radius+2, this.radius);
        }

        @Override
        public boolean isBorderOpaque() {
            return true;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            g.drawRoundRect(x,y,width-1,height-1,radius,radius);
            
//            c.setForeground(Color.red);
            
        }
    }
}
